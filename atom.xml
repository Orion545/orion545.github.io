<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Orion545&#39;s Blog</title>
  
  <subtitle>Even the world forsaked you, One shall never abandon himself!</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://orion545.github.io/"/>
  <updated>2019-07-13T08:17:28.198Z</updated>
  <id>http://orion545.github.io/</id>
  
  <author>
    <name>Orion545</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>TOFEL Training 7/13</title>
    <link href="http://orion545.github.io/tofel-7-13/"/>
    <id>http://orion545.github.io/tofel-7-13/</id>
    <published>2019-07-13T08:00:35.000Z</published>
    <updated>2019-07-13T08:17:28.198Z</updated>
    
    <content type="html"><![CDATA[<h1 id="TPO-52-Reading"><a href="#TPO-52-Reading" class="headerlink" title="TPO 52 Reading"></a>TPO 52 Reading</h1><p>Score: 28/30 with correction rate 39/42</p><p>For the vocabulary part, sometimes I still meet words that I am not familiar with. If this happens, it is of the most importance to examine the word in the original text.</p><p>When reading history topic passages, never let go of any sentence, since some questions might be asking for them.</p><h1 id="TPO-51-Reading"><a href="#TPO-51-Reading" class="headerlink" title="TPO 51 Reading"></a>TPO 51 Reading</h1><p>Score: 29/30 with correction rate 40/42</p><p>Why, most my mistakes are on vocabulary tasks……</p><p>Seems that most of other types are not a problem for me anymore, except the last ques in every passage. Sometimes I need to double check if a choice is A MINOR ONE or A MAJOR ONE.</p><p>Vocabulary mistakes are still making me frustrated. How on earth am I able to distinguish ‘permanently’ and ‘extensively’ when both are to replace ‘drastically’? Why, the answer told me it is extensively! The only thing I can do is try to put them back into the text and try reading them again and again. Hope this works.</p><a id="more"></a><h1 id="TPO-40-Reading"><a href="#TPO-40-Reading" class="headerlink" title="TPO 40 Reading"></a>TPO 40 Reading</h1><p>Score: 30/30 with correction rate 42/42</p><p>Nothing to say, too easy.</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;TPO-52-Reading&quot;&gt;&lt;a href=&quot;#TPO-52-Reading&quot; class=&quot;headerlink&quot; title=&quot;TPO 52 Reading&quot;&gt;&lt;/a&gt;TPO 52 Reading&lt;/h1&gt;&lt;p&gt;Score: 28/30 with correction rate 39/42&lt;/p&gt;
&lt;p&gt;For the vocabulary part, sometimes I still meet words that I am not familiar with. If this happens, it is of the most importance to examine the word in the original text.&lt;/p&gt;
&lt;p&gt;When reading history topic passages, never let go of any sentence, since some questions might be asking for them.&lt;/p&gt;
&lt;h1 id=&quot;TPO-51-Reading&quot;&gt;&lt;a href=&quot;#TPO-51-Reading&quot; class=&quot;headerlink&quot; title=&quot;TPO 51 Reading&quot;&gt;&lt;/a&gt;TPO 51 Reading&lt;/h1&gt;&lt;p&gt;Score: 29/30 with correction rate 40/42&lt;/p&gt;
&lt;p&gt;Why, most my mistakes are on vocabulary tasks……&lt;/p&gt;
&lt;p&gt;Seems that most of other types are not a problem for me anymore, except the last ques in every passage. Sometimes I need to double check if a choice is A MINOR ONE or A MAJOR ONE.&lt;/p&gt;
&lt;p&gt;Vocabulary mistakes are still making me frustrated. How on earth am I able to distinguish ‘permanently’ and ‘extensively’ when both are to replace ‘drastically’? Why, the answer told me it is extensively! The only thing I can do is try to put them back into the text and try reading them again and again. Hope this works.&lt;/p&gt;
    
    </summary>
    
      <category term="English" scheme="http://orion545.github.io/categories/english/"/>
    
    
      <category term="TOFEL" scheme="http://orion545.github.io/tags/tofel/"/>
    
  </entry>
  
  <entry>
    <title>TOFEL Training 6/30</title>
    <link href="http://orion545.github.io/tofel-6-30/"/>
    <id>http://orion545.github.io/tofel-6-30/</id>
    <published>2019-07-13T07:59:30.000Z</published>
    <updated>2019-07-13T08:17:33.418Z</updated>
    
    <content type="html"><![CDATA[<h1 id="TPO-53-Reading"><a href="#TPO-53-Reading" class="headerlink" title="TPO 53 Reading"></a>TPO 53 Reading</h1><p>Score: 30/30, correction 41/42</p><p>Not a single problem exists. I guess my concept of ‘check every word of its presence in the passage’ works well.</p><p>This reading is relatively easy. Although one history and another anthropology passage is included, these two ones only consist of elementary reasonings, so the entire difficulty is significantly cut, since most times history topics plays the role of the boss.</p><h1 id="TPO-53-Listening"><a href="#TPO-53-Listening" class="headerlink" title="TPO 53 Listening"></a>TPO 53 Listening</h1><p>Score:30/30, correction 33/33</p><p>Nothing to say. This TPO is extremely easy……</p><a id="more"></a><h1 id="Writing-Phrase-Practice"><a href="#Writing-Phrase-Practice" class="headerlink" title="Writing Phrase Practice"></a>Writing Phrase Practice</h1><p>This week I began to use Quizlet for my vocabulary practice. Up to now this app feels well for me.</p><p>I use the Spelling function on the IOS app. The practice contains 7 words for a round. Faults will result in a word appearing again in later rounds. I’ve finished 22 rounds by now, which seems adequate .</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;TPO-53-Reading&quot;&gt;&lt;a href=&quot;#TPO-53-Reading&quot; class=&quot;headerlink&quot; title=&quot;TPO 53 Reading&quot;&gt;&lt;/a&gt;TPO 53 Reading&lt;/h1&gt;&lt;p&gt;Score: 30/30, correction 41/42&lt;/p&gt;
&lt;p&gt;Not a single problem exists. I guess my concept of ‘check every word of its presence in the passage’ works well.&lt;/p&gt;
&lt;p&gt;This reading is relatively easy. Although one history and another anthropology passage is included, these two ones only consist of elementary reasonings, so the entire difficulty is significantly cut, since most times history topics plays the role of the boss.&lt;/p&gt;
&lt;h1 id=&quot;TPO-53-Listening&quot;&gt;&lt;a href=&quot;#TPO-53-Listening&quot; class=&quot;headerlink&quot; title=&quot;TPO 53 Listening&quot;&gt;&lt;/a&gt;TPO 53 Listening&lt;/h1&gt;&lt;p&gt;Score:30/30, correction 33/33&lt;/p&gt;
&lt;p&gt;Nothing to say. This TPO is extremely easy……&lt;/p&gt;
    
    </summary>
    
      <category term="English" scheme="http://orion545.github.io/categories/english/"/>
    
    
      <category term="TOFEL" scheme="http://orion545.github.io/tags/tofel/"/>
    
  </entry>
  
  <entry>
    <title>TOFEL Training 6/22</title>
    <link href="http://orion545.github.io/tofel-6-22/"/>
    <id>http://orion545.github.io/tofel-6-22/</id>
    <published>2019-07-13T07:57:50.000Z</published>
    <updated>2019-07-13T07:59:24.647Z</updated>
    
    <content type="html"><![CDATA[<h1 id="TPO-Reading-48"><a href="#TPO-Reading-48" class="headerlink" title="TPO Reading 48"></a>TPO Reading 48</h1><p>Harder than expected, got only 25/30 with 37/42 correction rate.</p><p>Main mistakes are the last question of each passage.</p><p>I find it important that in TOFEL test, a correct choice will always be correct, and every word of it will be correct as well.<br>Therefore it’s quite essential to check every statement in a choice thoroughly in the passage. Even if it seems obvious, it may not be a major idea or has some minor misunderstanding from the original text.</p><a id="more"></a><p>For some topics(Paleontology for example), it is usual that specific words may confuse you, since they might be professional nouns of that certain topic. In this situation, I think it is better not to focus on the precise definition of the word, but only take it as a name like John or Kate. By that way, maybe I can take the word as x in equations: focus on its qualities, so that the questions are well answered.</p><h1 id="TPO-Reading-47"><a href="#TPO-Reading-47" class="headerlink" title="TPO Reading 47"></a>TPO Reading 47</h1><p>Done just after TPO48, got 29/30 with 40/42 correction rate.</p><p>I guess this score was mainly because of my good status after finishing TPO48 :)</p><p>Still the same cautious point: check every word of a choice to see if it is correct.</p><h1 id="TPO-Listening-48"><a href="#TPO-Listening-48" class="headerlink" title="TPO Listening 48"></a>TPO Listening 48</h1><p>Medium level, got 28/30 with 33/34 correction rate.</p><p>The only mistake was a single choice, and the reason of it must be blamed to my carelessness.</p><p>I guess there won’t be much problem on this listening.</p><h1 id="More-to-discuss"><a href="#More-to-discuss" class="headerlink" title="More to discuss"></a>More to discuss</h1><p>Just started to use Quizlet on tackling with my writing phrase usage.</p><p>Felt great about this app on the first glance, got fascinated by its design and its use of ML.</p><p>Might be inspirational to me!</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;TPO-Reading-48&quot;&gt;&lt;a href=&quot;#TPO-Reading-48&quot; class=&quot;headerlink&quot; title=&quot;TPO Reading 48&quot;&gt;&lt;/a&gt;TPO Reading 48&lt;/h1&gt;&lt;p&gt;Harder than expected, got only 25/30 with 37/42 correction rate.&lt;/p&gt;
&lt;p&gt;Main mistakes are the last question of each passage.&lt;/p&gt;
&lt;p&gt;I find it important that in TOFEL test, a correct choice will always be correct, and every word of it will be correct as well.&lt;br&gt;Therefore it’s quite essential to check every statement in a choice thoroughly in the passage. Even if it seems obvious, it may not be a major idea or has some minor misunderstanding from the original text.&lt;/p&gt;
    
    </summary>
    
      <category term="English" scheme="http://orion545.github.io/categories/english/"/>
    
    
      <category term="TOFEL" scheme="http://orion545.github.io/tags/tofel/"/>
    
  </entry>
  
  <entry>
    <title>TOFEL Training 6/1</title>
    <link href="http://orion545.github.io/tofel-6-1/"/>
    <id>http://orion545.github.io/tofel-6-1/</id>
    <published>2019-07-13T07:51:11.000Z</published>
    <updated>2019-07-13T07:57:46.834Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Overall-Scores"><a href="#Overall-Scores" class="headerlink" title="Overall Scores"></a>Overall Scores</h1><p>Material: TPO 49</p><p>Reading: 28/30</p><p>Listening: 25/30</p><h2 id="Reading"><a href="#Reading" class="headerlink" title="Reading"></a>Reading</h2><p>I made more mistakes than I expected.</p><p>For 3-6 multiple choice problems, it is important to focus on the BEGINNING SENTENCE that was given in the problem.</p><p>If a choice is absolutely correct but has nothing to do with it, then is can’t be chosen</p><a id="more"></a><h2 id="Listening"><a href="#Listening" class="headerlink" title="Listening"></a>Listening</h2><p>Same as reading part.</p><p>Taking down less note might be comfortable, but at most times important info would be lost.</p><p>ALWAYS take notes on reasons described. These are vital info for multiple answers.</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Overall-Scores&quot;&gt;&lt;a href=&quot;#Overall-Scores&quot; class=&quot;headerlink&quot; title=&quot;Overall Scores&quot;&gt;&lt;/a&gt;Overall Scores&lt;/h1&gt;&lt;p&gt;Material: TPO 49&lt;/p&gt;
&lt;p&gt;Reading: 28/30&lt;/p&gt;
&lt;p&gt;Listening: 25/30&lt;/p&gt;
&lt;h2 id=&quot;Reading&quot;&gt;&lt;a href=&quot;#Reading&quot; class=&quot;headerlink&quot; title=&quot;Reading&quot;&gt;&lt;/a&gt;Reading&lt;/h2&gt;&lt;p&gt;I made more mistakes than I expected.&lt;/p&gt;
&lt;p&gt;For 3-6 multiple choice problems, it is important to focus on the BEGINNING SENTENCE that was given in the problem.&lt;/p&gt;
&lt;p&gt;If a choice is absolutely correct but has nothing to do with it, then is can’t be chosen&lt;/p&gt;
    
    </summary>
    
      <category term="English" scheme="http://orion545.github.io/categories/english/"/>
    
    
      <category term="TOFEL" scheme="http://orion545.github.io/tags/tofel/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://orion545.github.io/hello-world/"/>
    <id>http://orion545.github.io/hello-world/</id>
    <published>2019-07-13T07:50:56.901Z</published>
    <updated>2019-07-13T07:50:56.901Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><p></p><p class="code-caption" data-lang="bash" data-line_number="frontend" data-trim_indent="backend" data-label_position="outer" data-labels_left="Code" data-labels_right=":" data-labels_copy="Copy Code"><span class="code-caption-label"></span><a class="code-caption-copy">Copy Code</a></p><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p></p><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><a id="more"></a><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><p></p><p class="code-caption" data-lang="bash" data-line_number="frontend" data-trim_indent="backend" data-label_position="outer" data-labels_left="Code" data-labels_right=":" data-labels_copy="Copy Code"><span class="code-caption-label"></span><a class="code-caption-copy">Copy Code</a></p><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p></p><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><p></p><p class="code-caption" data-lang="bash" data-line_number="frontend" data-trim_indent="backend" data-label_position="outer" data-labels_left="Code" data-labels_right=":" data-labels_copy="Copy Code"><span class="code-caption-label"></span><a class="code-caption-copy">Copy Code</a></p><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p></p><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><p></p><p class="code-caption" data-lang="bash" data-line_number="frontend" data-trim_indent="backend" data-label_position="outer" data-labels_left="Code" data-labels_right=":" data-labels_copy="Copy Code"><span class="code-caption-label"></span><a class="code-caption-copy">Copy Code</a></p><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p></p><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;documentation&lt;/a&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;a href=&quot;https://hexo.io/docs/troubleshooting.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;troubleshooting&lt;/a&gt; or you can ask me on &lt;a href=&quot;https://github.com/hexojs/hexo/issues&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;Quick-Start&quot;&gt;&lt;a href=&quot;#Quick-Start&quot; class=&quot;headerlink&quot; title=&quot;Quick Start&quot;&gt;&lt;/a&gt;Quick Start&lt;/h2&gt;&lt;h3 id=&quot;Create-a-new-post&quot;&gt;&lt;a href=&quot;#Create-a-new-post&quot; class=&quot;headerlink&quot; title=&quot;Create a new post&quot;&gt;&lt;/a&gt;Create a new post&lt;/h3&gt;&lt;p&gt;&lt;/p&gt;&lt;p class=&quot;code-caption&quot; data-lang=&quot;bash&quot; data-line_number=&quot;frontend&quot; data-trim_indent=&quot;backend&quot; data-label_position=&quot;outer&quot; data-labels_left=&quot;Code&quot; data-labels_right=&quot;:&quot; data-labels_copy=&quot;Copy Code&quot;&gt;&lt;span class=&quot;code-caption-label&quot;&gt;&lt;/span&gt;&lt;a class=&quot;code-caption-copy&quot;&gt;Copy Code&lt;/a&gt;&lt;/p&gt;&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo new &lt;span class=&quot;string&quot;&gt;&quot;My New Post&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;&lt;/p&gt;
&lt;p&gt;More info: &lt;a href=&quot;https://hexo.io/docs/writing.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Writing&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="test" scheme="http://orion545.github.io/categories/test/"/>
    
    
  </entry>
  
  <entry>
    <title>TOFEL Training 5/26</title>
    <link href="http://orion545.github.io/tofel-5-26/"/>
    <id>http://orion545.github.io/tofel-5-26/</id>
    <published>2019-07-13T07:48:23.000Z</published>
    <updated>2019-07-13T08:24:13.448Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Material-Used"><a href="#Material-Used" class="headerlink" title="Material Used:"></a>Material Used:</h1><p>TPO 54, Reading + Listening</p><h1 id="Total-Points"><a href="#Total-Points" class="headerlink" title="Total Points:"></a>Total Points:</h1><p>Reading 29/30 (40/41)</p><p>Listening 25/30 (30/34)</p><h1 id="Tips-amp-Inspirations"><a href="#Tips-amp-Inspirations" class="headerlink" title="Tips &amp; Inspirations"></a>Tips &amp; Inspirations</h1><h2 id="Reading"><a href="#Reading" class="headerlink" title="Reading"></a>Reading</h2><p>Nothing really important, just need to do some more vocabulary.</p><p>When placing sentences, MIND their association with the sentence that is going to be behind it: most time there will be some relationship.</p><a id="more"></a><p>Listening</p><p>Not a pretty good score, but scarcely acceptable, I think.</p><p>Theatre-based conversations/lectures are one of my hradships, should practice more on it, or learn some basic knowledge about this topic.</p><p>Most Problems are limited to s certain part of the speech, so NEVER interfere with other parts when choosing.</p><p>Still that same philosophy: take choices as ABSOLUTE ones instead of a mild opinion.</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Material-Used&quot;&gt;&lt;a href=&quot;#Material-Used&quot; class=&quot;headerlink&quot; title=&quot;Material Used:&quot;&gt;&lt;/a&gt;Material Used:&lt;/h1&gt;&lt;p&gt;TPO 54, Reading + Listening&lt;/p&gt;
&lt;h1 id=&quot;Total-Points&quot;&gt;&lt;a href=&quot;#Total-Points&quot; class=&quot;headerlink&quot; title=&quot;Total Points:&quot;&gt;&lt;/a&gt;Total Points:&lt;/h1&gt;&lt;p&gt;Reading 29/30 (40/41)&lt;/p&gt;
&lt;p&gt;Listening 25/30 (30/34)&lt;/p&gt;
&lt;h1 id=&quot;Tips-amp-Inspirations&quot;&gt;&lt;a href=&quot;#Tips-amp-Inspirations&quot; class=&quot;headerlink&quot; title=&quot;Tips &amp;amp; Inspirations&quot;&gt;&lt;/a&gt;Tips &amp;amp; Inspirations&lt;/h1&gt;&lt;h2 id=&quot;Reading&quot;&gt;&lt;a href=&quot;#Reading&quot; class=&quot;headerlink&quot; title=&quot;Reading&quot;&gt;&lt;/a&gt;Reading&lt;/h2&gt;&lt;p&gt;Nothing really important, just need to do some more vocabulary.&lt;/p&gt;
&lt;p&gt;When placing sentences, MIND their association with the sentence that is going to be behind it: most time there will be some relationship.&lt;/p&gt;
    
    </summary>
    
      <category term="English" scheme="http://orion545.github.io/categories/english/"/>
    
    
      <category term="TOFEL" scheme="http://orion545.github.io/tags/tofel/"/>
    
  </entry>
  
  <entry>
    <title>Solution of LOJ3089</title>
    <link href="http://orion545.github.io/loj3089/"/>
    <id>http://orion545.github.io/loj3089/</id>
    <published>2019-07-09T13:54:41.000Z</published>
    <updated>2019-07-10T13:59:35.349Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Problem-Statement"><a href="#Problem-Statement" class="headerlink" title="Problem Statement"></a>Problem Statement</h1><p><a href="https://loj.ac/problem/3089" target="_blank" rel="noopener">link to loj.ac</a></p><h1 id="Main-Ideas"><a href="#Main-Ideas" class="headerlink" title="Main Ideas"></a>Main Ideas</h1><p>The Answer looks like a product of different items under a sqrt, therefore a basic tecnique is to use ln.</p><p>After this, calculation of product is changed to calculation of sum, which looks like:</p><script type="math/tex; mode=display">\sqrt[n]{\prod_i a_i}=\frac{1}{n}\sum_i\log_ba_i</script><p>Now the problem is to seek the maximum average value of gem sequences that match the model string.</p><p>When a problem of strings contains ONE model and MANY patterns, AC Automaton should come to one’s mind at once!</p><a id="more"></a><p>We build the AC Automaton for the model string, and do dynamic programming on it, thus the problem should be solved.</p><p>MIND that each node on the AC Automaton should inherit all the information of its ancestors on the fail-pointer tree.</p><p>When a problem that asks for minimize/maximize the average for a certain set of values, Linear Programming should come to one’s mind at once!</p><p>Assume that the average for the current set of model strings is $C$, it is obvious that we can do binary search to determine its value.</p><p>Then if there is a set of {w} that results in an average larger than $C$, the following expression should be true:</p><script type="math/tex; mode=display">\frac{1}{siz}\sum_{i=1}^{siz}w_i\geq C</script><script type="math/tex; mode=display">\sum_{i=1}^{siz}w_i\geq C\ast siz</script><script type="math/tex; mode=display">\sum_{i=1}^{siz}(w_i-C)\geq 0</script><p>Now we can use the sign of the largest possibel <script type="math/tex">{w}</script> to determine if the current <script type="math/tex">C</script> is the answer.</p><p>The benefit of this algorithm is that we can delete one dimension of our DP on the AC Automaton, thus the Complexity is divided by <script type="math/tex">n</script></p><p>We assume <script type="math/tex">dp[u][i]</script> represents this state: iteration on the first <script type="math/tex">i</script> characters of the model string has been finished, and the pointer on AC Automaton is at node <script type="math/tex">u</script></p><p>If the next character of the model string is fixed, we simply update the value for <script type="math/tex">dp[sonu(str[i+1])][i+1]</script>,</p><p>else we’ll have to update all values of <script type="math/tex">dp[sonu(0…9)][i+1]</script></p><p>For more Details, refer to the code</p><p></p><p class="code-caption" data-lang="cpp" data-line_number="frontend" data-trim_indent="backend" data-label_position="outer" data-labels_left="Code" data-labels_right=":" data-labels_copy="Copy Code"><span class="code-caption-label"></span><a class="code-caption-copy">Copy Code</a></p><br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*------------------------------</span></span><br><span class="line"><span class="comment">Author: Orion545</span></span><br><span class="line"><span class="comment">Date: 2019/05/16</span></span><br><span class="line"><span class="comment">Time: 157 min</span></span><br><span class="line"><span class="comment">------------------------------*/</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cassert&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> re=<span class="number">0</span>,flag=<span class="number">1</span>;<span class="keyword">char</span> ch=getchar();</span><br><span class="line">    <span class="keyword">while</span>(!<span class="built_in">isdigit</span>(ch))&#123;</span><br><span class="line">        <span class="keyword">if</span>(ch==<span class="string">'-'</span>) flag=<span class="number">-1</span>;</span><br><span class="line">        ch=getchar();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">isdigit</span>(ch)) re=(re&lt;&lt;<span class="number">1</span>)+(re&lt;&lt;<span class="number">3</span>)+ch-<span class="string">'0'</span>,ch=getchar();</span><br><span class="line">    <span class="keyword">return</span> re*flag;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> n,m;<span class="keyword">double</span> w[<span class="number">1510</span>];</span><br><span class="line"><span class="keyword">char</span> a[<span class="number">1510</span>],s[<span class="number">1510</span>][<span class="number">1510</span>];</span><br><span class="line"><span class="keyword">int</span> ch[<span class="number">1510</span>][<span class="number">10</span>],cntn=<span class="number">0</span>,num[<span class="number">1510</span>],fail[<span class="number">1510</span>];</span><br><span class="line"><span class="keyword">double</span> sum[<span class="number">1510</span>];</span><br><span class="line"><span class="comment">//AC Automaton</span></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">insert</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> len)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i,cur=<span class="number">0</span>,tmp;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;=len;i++)&#123;</span><br><span class="line">        tmp=s[x][i]-<span class="string">'0'</span>;</span><br><span class="line">        <span class="keyword">if</span>(!ch[cur][tmp]) ch[cur][tmp]=++cntn;</span><br><span class="line">        cur=ch[cur][tmp];</span><br><span class="line">    &#125;</span><br><span class="line">    num[cur]++;sum[cur]+=w[x];</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">queue</span>&lt;<span class="keyword">int</span>&gt;q;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">build</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i,u,v;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">10</span>;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(!ch[<span class="number">0</span>][i]) <span class="keyword">continue</span>;</span><br><span class="line">        q.push(ch[<span class="number">0</span>][i]);fail[ch[<span class="number">0</span>][i]]=<span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(!q.empty())&#123;</span><br><span class="line">        u=q.front();q.pop();</span><br><span class="line">        num[u]+=num[fail[u]];</span><br><span class="line">        sum[u]+=sum[fail[u]];</span><br><span class="line">        <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">10</span>;i++)&#123;</span><br><span class="line">            v=ch[u][i];</span><br><span class="line">            <span class="keyword">if</span>(v) fail[v]=ch[fail[u]][i],q.push(v);</span><br><span class="line">            <span class="keyword">else</span> ch[u][i]=ch[fail[u]][i];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//Dynamic Programming</span></span><br><span class="line"><span class="keyword">double</span> dp[<span class="number">1510</span>][<span class="number">1510</span>];</span><br><span class="line"><span class="keyword">int</span> from[<span class="number">1510</span>][<span class="number">1510</span>][<span class="number">2</span>],endpos;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">bool</span> <span class="title">check</span><span class="params">(<span class="keyword">double</span> mid)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i,j,k,son;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;=n;i++) <span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;=cntn;j++) dp[i][j]=<span class="number">-2e20</span>;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;=cntn;i++)&#123;</span><br><span class="line">        sum[i]-=mid*(<span class="keyword">double</span>)num[i];<span class="comment">//cut the value according to binary search process</span></span><br><span class="line">    &#125;</span><br><span class="line">    dp[<span class="number">0</span>][<span class="number">0</span>]=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;=cntn;j++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(dp[i<span class="number">-1</span>][j]==<span class="number">-2e20</span>) <span class="keyword">continue</span>;</span><br><span class="line">            <span class="keyword">if</span>(a[i]!=<span class="string">'.'</span>)&#123;<span class="comment">//character is fixed in original S</span></span><br><span class="line">                son=ch[j][a[i]-<span class="string">'0'</span>];</span><br><span class="line">                <span class="keyword">if</span>(dp[i][son]&lt;dp[i<span class="number">-1</span>][j]+sum[son])&#123;</span><br><span class="line">                    dp[i][son]=dp[i<span class="number">-1</span>][j]+sum[son];</span><br><span class="line">                    from[i][son][<span class="number">0</span>]=j;<span class="comment">//record the source of the maximum value</span></span><br><span class="line">                    from[i][son][<span class="number">1</span>]=a[i]-<span class="string">'0'</span>;<span class="comment">//record the corresponding character</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span>&#123;<span class="comment">//character is unfixed</span></span><br><span class="line">                <span class="keyword">for</span>(k=<span class="number">0</span>;k&lt;<span class="number">10</span>;k++)&#123;</span><br><span class="line">                    son=ch[j][k];</span><br><span class="line">                    <span class="keyword">if</span>(dp[i][son]&lt;dp[i<span class="number">-1</span>][j]+sum[son])&#123;</span><br><span class="line">                        dp[i][son]=dp[i<span class="number">-1</span>][j]+sum[son];</span><br><span class="line">                        from[i][son][<span class="number">0</span>]=j;</span><br><span class="line">                        from[i][son][<span class="number">1</span>]=k;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> pos=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;=cntn;i++) <span class="keyword">if</span>(dp[n][i]&gt;dp[n][pos]) pos=i;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;=cntn;i++) sum[i]+=mid*(<span class="keyword">double</span>)num[i];<span class="comment">//repair the value cut</span></span><br><span class="line">    endpos=pos;<span class="keyword">return</span> dp[n][pos]&gt;<span class="number">0</span>;<span class="comment">//determine if largest value is over zero</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">char</span> re[<span class="number">1510</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    n=read();m=read();<span class="keyword">int</span> i;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%s"</span>,a+<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;=m;i++)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%s"</span>,s[i]+<span class="number">1</span>);</span><br><span class="line">        w[i]=read();</span><br><span class="line">        w[i]=<span class="built_in">log</span>((<span class="keyword">double</span>)w[i]);</span><br><span class="line">        insert(i,<span class="built_in">strlen</span>(s[i]+<span class="number">1</span>));</span><br><span class="line">    &#125;</span><br><span class="line">    build();</span><br><span class="line">    <span class="keyword">double</span> l=<span class="number">0</span>,r=<span class="built_in">log</span>(<span class="number">1e9</span>+<span class="number">7</span>),mid,ans=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(r-l&gt;<span class="number">1e-6</span>)&#123;<span class="comment">//binary search</span></span><br><span class="line">        mid=(l+r)*<span class="number">0.5</span>;</span><br><span class="line">        <span class="keyword">if</span>(check(mid)) ans=mid,l=mid;</span><br><span class="line">        <span class="keyword">else</span> r=mid;</span><br><span class="line">    &#125;</span><br><span class="line">    check(ans);</span><br><span class="line">    <span class="keyword">for</span>(i=n;i&gt;=<span class="number">1</span>;i--)&#123;<span class="comment">//get the answer string</span></span><br><span class="line">        re[i]=from[i][endpos][<span class="number">1</span>]+<span class="string">'0'</span>;</span><br><span class="line">        endpos=from[i][endpos][<span class="number">0</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;=n;i++) <span class="built_in">putchar</span>(re[i]);</span><br><span class="line">    <span class="built_in">putchar</span>(<span class="string">'\n'</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Problem-Statement&quot;&gt;&lt;a href=&quot;#Problem-Statement&quot; class=&quot;headerlink&quot; title=&quot;Problem Statement&quot;&gt;&lt;/a&gt;Problem Statement&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;https://loj.ac/problem/3089&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;link to loj.ac&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;Main-Ideas&quot;&gt;&lt;a href=&quot;#Main-Ideas&quot; class=&quot;headerlink&quot; title=&quot;Main Ideas&quot;&gt;&lt;/a&gt;Main Ideas&lt;/h1&gt;&lt;p&gt;The Answer looks like a product of different items under a sqrt, therefore a basic tecnique is to use ln.&lt;/p&gt;
&lt;p&gt;After this, calculation of product is changed to calculation of sum, which looks like:&lt;/p&gt;
&lt;script type=&quot;math/tex; mode=display&quot;&gt;\sqrt[n]{\prod_i a_i}=\frac{1}{n}\sum_i\log_ba_i&lt;/script&gt;&lt;p&gt;Now the problem is to seek the maximum average value of gem sequences that match the model string.&lt;/p&gt;
&lt;p&gt;When a problem of strings contains ONE model and MANY patterns, AC Automaton should come to one’s mind at once!&lt;/p&gt;
    
    </summary>
    
      <category term="OI Solution" scheme="http://orion545.github.io/categories/oi-solution/"/>
    
    
      <category term="AC Automaton" scheme="http://orion545.github.io/tags/ac-automaton/"/>
    
      <category term="DP" scheme="http://orion545.github.io/tags/dp/"/>
    
  </entry>
  
</feed>
